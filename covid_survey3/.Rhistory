ggtitle(
"Cluster in the world")+
theme(
plot.title =  element_text(hjust=0.5),
legend.title = element_blank(),
plot.subtitle= element_text(hjust=0.5,vjust = 5,  size = 8))
ggplot(data= sf) +
geom_sf(aes(fill=factor(complete_cluster)))+
scale_fill_manual(values = c("blue", "yellow","red", "green","purple"))+
theme_void()+
ggtitle(
"Cluster in the world")+
theme(
plot.title =  element_text(hjust=0.5),
legend.title = element_blank(),
plot.subtitle= element_text(hjust=0.5,vjust = 5,  size = 8))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(factoextra)
library(sf)
load("mathstats_miniproject_1.Rdata")
df_num <- df %>% select(where(is.numeric))
df_scaled <- scale(df_num)
skimr::skim(df_scaled)
View(df_scaled)
euc_d <- get_dist(df_scaled, "euclidean")
euc_df <- as.data.frame(as.matrix(euc_d))
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% tail(5)
euc_d <- get_dist(df_scaled, "euclidean")
euc_df <- as.data.frame(as.matrix(euc_d))
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% tail(5)
euc_df %>% filter(Germany==0)
View(euc_df)
library(tidyverse)
library(factoextra)
library(sf)
library(ggrepel)
View(df)
View(df_num)
pca <- prcomp(df_numeric, center = TRUE, scale. = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(factoextra)
library(sf)
library(ggrepel)
load("mathstats_miniproject_1.Rdata")
df_num <- df %>% select(where(is.numeric))
df_scaled <- scale(df_num)
skimr::skim(df_scaled)
euc_d <- get_dist(df_scaled, "euclidean")
euc_df <- as.data.frame(as.matrix(euc_d))
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% tail(5)
df_hcut <-factoextra::hcut(df_scaled, hc_method = "complete", hc_distance="euclidian", k=5)
df$complete_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "average", hc_distance="euclidian", k=5)
#df$average_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "single", hc_distance="euclidian", k=5)
#df$single_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "ward.D2", hc_distance="euclidian", k=5)
#df$ward_cluster <- df_hcut$cluster
fviz_dend(df_hcut)
fviz_nbclust(df_scaled, FUN = hcut, method = "silhouette")
df %>%
group_by(complete_cluster)%>%
summarise_if(is.numeric, mean)
sf <- left_join(sf,df, by= "iso_alpha")
ggplot(data= sf) +
geom_sf(aes(fill=factor(complete_cluster)))+
scale_fill_manual(values = c("blue", "yellow","red", "green","purple"))+
theme_void()+
ggtitle(
"Cluster in the world")+
theme(
plot.title =  element_text(hjust=0.5),
legend.title = element_blank(),
plot.subtitle= element_text(hjust=0.5,vjust = 5,  size = 8))
pca <- prcomp(df_numeric, center = TRUE, scale. = TRUE)
pca <- prcomp(df_numeric, center = TRUE, scale. = TRUE)
pca <- prcomp(df_num, center = TRUE, scale. = TRUE)
str(pca)
data.frame(pca$rotation)
data.frame(pca$x)
#are new variables uncorrelated
round(cov(pca$x), 2)
summary(pca)
fviz_eig(pca)
fviz_pca_ind(pca, repel = TRUE)
biplot(pr.out, scale=0)
biplot(pca.out, scale=0)
biplot(pca, scale=0)
biplot(pca, axes = c(3, 4), scale=0)
biplot(pca, axes = c(1,2,3,4), scale=0)
fviz_pca_ind(pca, axes = c(3, 4), repel = TRUE)
fviz_pca_ind(pca, axes = c(1,2,3, 4), repel = TRUE)
fviz_pca_ind(pca, axes = c(4), repel = TRUE)
fviz_pca_ind(pca, axes = c(3,4), repel = TRUE)
fviz_pca_ind(pca, repel = TRUE)
fviz_pca_ind(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil")))
fviz_pca_ind(pca, repel = TRUE)
fviz_pca_biplot(pca, repel = TRUE)
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany")))
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Finland","Sweden","China","Italy","Spain","Russia","Portugal","Poland","Slovenia","South Africa","Turkey","Ukraine","United Kingdom","United States")))
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","United Kingdom","United States")))
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
fviz_pca_biplot(pca, repel = TRUE,col.ind = df$complete_cluster,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")), )
fviz_pca_biplot(pca, repel = TRUE,col.ind = df$complete_cluster,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")), palette="jco", addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE,col.ind = df$complete_cluster,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")),  addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE,col.ind = df$complete_cluster,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")), addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE,col.ind = df$complete_cluster, addEllipses = TRUE,, addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE,col.ind = df$complete_cluster, addEllipses = TRUE)
View(pca)
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
fviz_pca_biplot(pca, repel = TRUE, col.ind = df$complete_cluster, addEllipses = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
typeof(df['complete_cluster'])
typeof(df['complete_cluster'][0])
typeof(df)
typeof(df)
summarise(df)
fviz_pca_biplot(pca, repel = TRUE, col.ind = str(df$complete_cluster), addEllipses = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster)
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")),addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda";"Albania")),addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE)
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE, legend.title="Biplot with Clusters")
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE, legend.title="Clusters")
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE, legend.title="Cluster")
distances_euclidian <- get_dist(df_scaled, "euclidean")
df_euclidian <- as.data.frame(as.matrix(distances_euclidian))
df_euclidian %>% filter(Germany!=0)  %>% select(Germany) %>% head(5)
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% tail(5)
distances_euclidian <- get_dist(df_scaled, "euclidean")
df_euclidian <- as.data.frame(as.matrix(distances_euclidian))
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% tail(5)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(factoextra)
library(sf)
library(ggrepel)
load("mathstats_miniproject_1.Rdata")
df_num <- df %>% select(where(is.numeric))
df_scaled <- scale(df_num)
skimr::skim(df_scaled)
distances_euclidian <- get_dist(df_scaled, "euclidean")
df_euclidian <- as.data.frame(as.matrix(distances_euclidian))
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% tail(5)
df_hcut <-factoextra::hcut(df_scaled, hc_method = "complete", hc_distance="euclidian", k=5)
df$complete_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "average", hc_distance="euclidian", k=5)
#df$average_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "single", hc_distance="euclidian", k=5)
#df$single_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "ward.D2", hc_distance="euclidian", k=5)
#df$ward_cluster <- df_hcut$cluster
fviz_dend(df_hcut)
fviz_nbclust(df_scaled, FUN = hcut, method = "silhouette")
df %>%
group_by(complete_cluster)%>%
summarise_if(is.numeric, mean)
sf <- left_join(sf,df, by= "iso_alpha")
ggplot(data= sf) +
geom_sf(aes(fill=factor(complete_cluster)))+
scale_fill_manual(values = c("blue", "yellow","red", "green","purple"))+
theme_void()+
ggtitle(
"Cluster in the world")+
theme(
plot.title =  element_text(hjust=0.5),
legend.title = element_blank(),
plot.subtitle= element_text(hjust=0.5,vjust = 5,  size = 8))
pca <- prcomp(df_num, center = TRUE, scale. = TRUE)
#principle component scores
data.frame(pca$x)
#it shows, that the new variables are uncorrelated
round(cov(pca$x), 2)
#Four PCs are needed to capture a variance of 90%
summary(pca)
#here you can see how the variance is decreasing extremly after the first PC.
fviz_eig(pca)
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE, legend.title="Cluster")
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE, legend.title="Cluster")
distances_euclidian <- get_dist(df_scaled, "euclidean")
df_euclidian <- as.data.frame(as.matrix(distances_euclidian))
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
df_euclidian %>% filter(Germany!=0) %>% arrange(-Germany) %>% select(Germany) %>% head(5)
View(df_euclidian)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(factoextra)
library(sf)
library(ggrepel)
load("mathstats_miniproject_1.Rdata")
#After checking the data, i decided to preprocess it, because i want to compare different columns. At the moment the columns have different units.
df_num <- df %>% select(where(is.numeric))
df_scaled <- scale(df_num)
#check if the standardization worked
skimr::skim(df_scaled)
distances_euclidian <- get_dist(df_scaled, "euclidean")
df_euclidian <- as.data.frame(as.matrix(distances_euclidian))
df_euclidian %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
df_euclidian %>% filter(Germany!=0) %>% arrange(-Germany) %>% select(Germany) %>% head(5)
df_hcut <-factoextra::hcut(df_scaled, hc_method = "complete", hc_distance="euclidian", k=5)
df$complete_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "average", hc_distance="euclidian", k=5)
#df$average_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "single", hc_distance="euclidian", k=5)
#df$single_cluster <- df_hcut$cluster
#df_hcut <-factoextra::hcut(df_scaled, hc_method = "ward.D2", hc_distance="euclidian", k=5)
#df$ward_cluster <- df_hcut$cluster
fviz_dend(df_hcut)
fviz_nbclust(df_scaled, FUN = hcut, method = "silhouette")
df %>%
group_by(complete_cluster)%>%
summarise_if(is.numeric, mean)
sf <- left_join(sf,df, by= "iso_alpha")
ggplot(data= sf) +
geom_sf(aes(fill=factor(complete_cluster)))+
scale_fill_manual(values = c("blue", "yellow","red", "green","purple"))+
theme_void()+
ggtitle(
"Cluster in the world")+
theme(
plot.title =  element_text(hjust=0.5),
legend.title = element_blank(),
plot.subtitle= element_text(hjust=0.5,vjust = 5,  size = 8))
pca <- prcomp(df_num, center = TRUE, scale. = TRUE)
#principle component scores
data.frame(pca$x)
#it shows, that the new variables are uncorrelated
round(cov(pca$x), 2)
summary(pca)
#here you can see how the variance is decreasing extremly after the first PC.
fviz_eig(pca)
fviz_pca_biplot(pca, repel = TRUE,select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States")))
fviz_pca_biplot(pca, repel = TRUE, geom.ind = 'text', habillage = df$complete_cluster, select.ind = list(name = c("France", "Germany","Brazil","Argentina","Chile","Burkina Faso","Sweden","China","Honduras","Gambia","Russia","Egypt","Jordan","Slovenia","South Africa","Turkey","Ukraine","Togo","United States", "Afghanistan","Sudan","Uganda","Albania")),addEllipses = TRUE, legend.title="Cluster")
fviz_pca_var(pca)
fviz_pca_var(pca)
fviz_pca_var(pca)
airquality <- read_csv("data/airquality.csv")
library(tidyverse)
library(ggrepel)
library(lubridate)
library(sf)
airquality <- read_csv("data/airquality.csv")
sites <- read_csv("data/sites.csv")
df <- sites %>%
inner_join(airquality, by = "site") %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date, label = TRUE),
week = lubridate::week(date),
wday = lubridate::wday(date, label = TRUE, week_start = 1)) %>%
relocate(c(year, month, week, wday), .after = date) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
write_rds(df, "data/airquality_full.Rds")
View(df)
library(ggplot2)
qplot(x=state,
y = mean('o3'),
color = 'site_area',
data =  df) +
geom_errorbar(aes(ymin = mean - se,
ymax = mean + se,
width = 0.15))
library(ggplot2)
qplot(x=state,
y = mean('o3'),
color = 'site_area',
data =  df) +
geom_errorbar(aes(ymin = mean - min('o3'),
ymax = mean + max('o3'),
width = 0.15))
library(ggplot2)
qplot(x=state,
y = mean('o3'),
color = 'site_area',
data =  df) +
geom_errorbar(aes(ymin = mean('o3') - min('o3'),
ymax = mean('o3') + max('o3'),
width = 0.15))
library(ggplot2)
test <- df$o3 %>% mean() %>% group_by('site_area')
library(ggplot2)
test <- df$o3  %>% group_by('site_area')
library(ggplot2)
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
library(ggplot2)
qplot(x=df$state,
y = df$o3,
color = mean(df$site_area),
data =  df)
library(ggplot2)
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
library(ggplot2)
df_mean <- df %>% group_by('site_area') %>% summarise(mean_o3 = mean('o3'))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
View(df_mean)
library(ggplot2)
df_mean <- df %>% group_by(df$site_area) %>% summarise(mean_o3 = mean('o3'))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
View(df_mean)
library(ggplot2)
df_mean <- df %>% group_by(df$site_area) %>% summarise(mean_o3 = mean('o3', na.rm=TRUE))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
View(df_mean)
library(ggplot2)
df_mean <- df %>% group_by(df$site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
View(df_mean)
library(ggplot2)
df <- df %>% group_by(df$site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
airquality <- read_csv("data/airquality.csv")
sites <- read_csv("data/sites.csv")
df <- sites %>%
inner_join(airquality, by = "site") %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date, label = TRUE),
week = lubridate::week(date),
wday = lubridate::wday(date, label = TRUE, week_start = 1)) %>%
relocate(c(year, month, week, wday), .after = date) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
write_rds(df, "data/airquality_full.Rds")
library(ggplot2)
df_mean <- df %>% group_by(df$site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df)
View(df_mean)
library(ggplot2)
df_mean <- df %>% select(df$state) %>% group_by(df$site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
library(ggplot2)
df_mean <- df  %>% group_by(df$site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
qplot(x=df$state,
y = df$o3,
color = df$site_area,
data =  df_mean)
library(ggplot2)
df_mean <- df  %>% group_by(df$site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
qplot(x=df$state,
y = df_mean$mean_o3,
color = df$site_area,
data =  df_mean)
library(ggplot2)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
qplot(x=df_$state,
y = df_mean$mean_o3,
color = df$site_area,
data =  df_mean)
View(df_mean)
library(ggplot2)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
df <- df %>% left_join(df_mean, by='site_area')
library(ggplot2)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
df <- df %>% left_join(df_mean, by='site_area')
library(ggplot2)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
df <- df %>% left_join(df_mean, by='site_area')
library(ggplot2)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
st_drop_geometry(df_mean)
st_drop_geometry(df)
df <- df %>% left_join(df_mean, by='site_area')
airquality <- read_csv("data/airquality.csv")
sites <- read_csv("data/sites.csv")
df <- sites %>%
inner_join(airquality, by = "site") %>%
mutate(year = lubridate::year(date),
month = lubridate::month(date, label = TRUE),
week = lubridate::week(date),
wday = lubridate::wday(date, label = TRUE, week_start = 1)) %>%
relocate(c(year, month, week, wday), .after = date) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326, agr = "constant")
write_rds(df, "data/airquality_full.Rds")
library(ggplot2)
st_drop_geometry(df)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
df <- df %>% left_join(df_mean, by='site_area')
df <- st_drop_geometry(df)
df_mean <- df  %>% group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
View(df_mean)
df <- df %>% left_join(df_mean, by='site_area')
qplot(x=df$state,
y = df$o3,
color = df$mean_o3,
data =  df)
library(ggplot2)
df <- st_drop_geometry(df)
qplot(x=df$state,
y = df$mean_o3,
color = df$site_area,
data =  df)
ggplot(df) +
aes(x = site_name, y = o3) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
ggplot(df) +
aes(x = state, y = o3) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
df %>%
filter(state %in% "sh") %>%
ggplot() +
aes(x = site_name, y = o3) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
df %>%
filter(state %in% "sh") %>%
ggplot() +
aes(x = states, y = o3) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
df %>%
filter(state %in% "sh") %>%
ggplot() +
aes(x = state, y = o3) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
df %>%
group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
ggplot() +
aes(x = state, y = o3) +
geom_boxplot(fill = mean_o3) +
theme_minimal()
df %>%
group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))
ggplot() +
aes(x = state, y = o3) +
geom_boxplot(fill = df %>%
group_by(site_area) %>% summarise(mean_o3 = mean(df$o3,na.rm=TRUE))) +
theme_minimal()
ggplot(df) +
aes(x = site_name, y = o3) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal() +
facet_grid(vars(state), vars(site_area))
df %>%
ggplot(aes(x = state, y = no2)) +
geom_boxplot()
myplot <- function(dataframe, x_axis, y_axis)
{dataframe %>%
ggplot(aes(x = state, y = no2)) +
geom_boxplot()}
myplot(df, x_axis, y_axis = )
myplot <- function(dataframe, x_axis, y_axis)
{dataframe %>%
ggplot(aes(x = state, y = no2)) +
geom_boxplot()}
myplot(df, x_axis, y_axis)
library(ggplot2)
myplot <- function(dataframe, x_axis, y_axis)
{dataframe %>%
ggplot(aes(x = state, y = no2)) +
geom_boxplot()}
myplot(df, 'state', 'no2')
myplot <- function(dataframe, x_axis, y_axis)
{dataframe %>%
ggplot(aes(x = state, y = no2)) +
geom_boxplot()}
myplot(df, 'state', 'o3')
myplot <- function(dataframe, x_axis, y_axis)
{dataframe %>%
ggplot(aes(x = x_axis, y = y_axis)) +
geom_boxplot()}
myplot(df, 'state', 'o3')
myplot <- function(dataframe, x_axis, y_axis)
{dataframe %>%
ggplot(aes(x = .data[[x_axis]], y = .data[[y_axis]])) +
geom_boxplot()}
myplot(df, 'state', 'o3')
shiny::runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny')
runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny')
runApp()
shiny::runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny')
shiny::runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny Kopie')
runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny Kopie')
runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny Kopie')
runApp('Studium_Master/Visualisierung/Markdowns/shiny/first_shiny Kopie')
shiny::runApp('Studium_Master/Visualisierung/Covid-Shiny/covid_survey3')
runApp('Studium_Master/Visualisierung/Covid-Shiny/covid_survey3')
install packages shinydashboard
runApp('Studium_Master/Visualisierung/Covid-Shiny/covid_survey3')
runApp('Studium_Master/Visualisierung/Covid-Shiny/covid_survey3')
runApp('Studium_Master/Visualisierung/Covid-Shiny/covid_survey3')
