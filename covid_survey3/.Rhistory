df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster)))
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void()
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = "Cluster")
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = element_blank())
hc <- factoextra::hcut(df_scaled, k=3, hc_method = "complete", hc_distance= "euclidean")
fviz_dend(hc)
df %>% mutate(cluster = hc$cluster) %>% group_by(cluster) %>% summarise_if(is.numeric, mean)
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = element_blank()) + ggtitle("Hiera")
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = element_blank()) + ggtitle("Hierachical cluster analysis on country development")
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5)) + ggtitle("Hierachical cluster analysis on country development")
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster)
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster, geom.ind = "text")
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster, geom.ind = "point")
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster, geom.ind = "text")
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster, geom.ind = "text", geom.var = "point")
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster, geom.ind = "text")
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")), habillage = hc$cluster, geom.ind = "point")
fviz_pca_biplot(pca, repel = T, habillage = hc$cluster, geom.ind = "point")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(factoextra)
library(sf)
load("mathstats_miniproject_1.Rdata")
# We need to standartize the data because there are used different units in the df.
df_scaled <- df %>% rownames_to_column('country') %>% mutate_if(is.numeric, scale) %>% column_to_rownames('country') %>% select(where(is.numeric))
skimr::skim(df_scaled)
euc_d <- get_dist(df_scaled, "euclidean")
euc_df <- as.data.frame(as.matrix(euc_d))
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
euc_df %>% filter(Germany!=0) %>% arrange(-Germany) %>% select(Germany) %>% head(5)
hc <- factoextra::hcut(df_scaled, k=3, hc_method = "complete", hc_distance= "euclidean")
fviz_dend(hc)
df %>% mutate(cluster = hc$cluster) %>% group_by(cluster) %>% summarise_if(is.numeric, mean)
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5)) + ggtitle("Hierachical cluster analysis on country development")
# df_numeric <- df_scaled %>% select(life_expectancy:internet_users)
pca = prcomp(df_scaled, center = T, scale. = T)
summary(pca)
# 4 principal components are needed to capture 90% percent of the variance in the data as you see in the summary below
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")))
fviz_pca_var(pca, repel = T)
fviz_pca_biplot(pca, repel = T, habillage = hc$cluster, geom.ind = "point")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
fviz_pca_biplot(pca, repel = T, habillage = hc$cluster, geom.ind = "point", eclipse = T)
library(tidyverse)
library(factoextra)
library(sf)
load("mathstats_miniproject_1.Rdata")
# We need to standartize the data because there are used different units in the df.
df_scaled <- df %>% rownames_to_column('country') %>% mutate_if(is.numeric, scale) %>% column_to_rownames('country') %>% select(where(is.numeric))
skimr::skim(df_scaled)
euc_d <- get_dist(df_scaled, "euclidean")
euc_df <- as.data.frame(as.matrix(euc_d))
euc_df %>% filter(Germany!=0) %>% arrange(Germany) %>% select(Germany) %>% head(5)
euc_df %>% filter(Germany!=0) %>% arrange(-Germany) %>% select(Germany) %>% head(5)
hc <- factoextra::hcut(df_scaled, k=3, hc_method = "complete", hc_distance= "euclidean")
fviz_dend(hc)
df %>% mutate(cluster = hc$cluster) %>% group_by(cluster) %>% summarise_if(is.numeric, mean)
df_map <- inner_join(sf, df, by= "iso_alpha")
ggplot(data= df_map) + geom_sf(aes(fill=factor(hc$cluster))) + theme_void() + theme(legend.title = element_blank(), plot.title = element_text(hjust = 0.5)) + ggtitle("Hierachical cluster analysis on country development")
# df_numeric <- df_scaled %>% select(life_expectancy:internet_users)
pca = prcomp(df_scaled, center = T, scale. = T)
summary(pca)
# 4 principal components are needed to capture 90% percent of the variance in the data as you see in the summary below
fviz_pca_biplot(pca, repel = T, select.ind = list(name = c("France", "Germany", "China", "Egypt", "Brazil", "Mexico", "Nigeria", "Malawi", "United States", "South Africa", "Sudan")))
fviz_pca_var(pca, repel = T)
fviz_pca_biplot(pca, repel = T, habillage = hc$cluster, geom.ind = "point", eclipse = T)
fviz_pca_biplot(pca, repel = T, habillage = hc$cluster, geom.ind = "point", addEllipses = T)
fviz_pca_biplot(pca, repel = T, habillage = hc$cluster, geom.ind = "point", addEllipses = T, legend.title = "Cluster")
shiny::runApp('DataViz/Airquality')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
View(df)
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/seccond_app/seccond_app')
runApp('DataViz/Covid-Shiny/covid_survey3')
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(sf)
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
install.packages("shinythemes")
library(shinythemes)
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
df <- read_csv("data/wages.csv")
model1 <- lm(totalPay ~ dept + perfEval, data = df)
summary(model1)
confint(model1)
model2 <- lm(formula = bonus ~ age + perfEval, data = subset(df, df$gender=="Male"))
model2 <- lm(formula = bonus ~ age + perfEval, data = subset(df, df$gender=="Male"))
model2
model2 <- lm(formula = bonus ~ age + perfEval, data = subset(df, df$gender=="Male"))
summary(model2)
model2 <- lm(formula = bonus ~ age + perfEval+ gender)
model2 <- lm(formula = bonus ~ age + perfEval* gender)
model2 <- lm(formula = bonus ~ age + perfEval* gender, df)
summary(model2)
model2 <- lm(formula = bonus ~ age + perfEval + gender, df)
summary(model2)
model2 <- lm(formula = bonus ~ age + perfEval * gender, df)
summary(model2)
model2 <- lm(formula = bonus ~ age * perfEval + perfEval * gender, df)
summary(model2)
model2 <- lm(formula = bonus ~ age * gender + perfEval * gender, df)
summary(model2)
model3 = lm(bonus ~ age, df)
summary(model3)
confint(model3)
model3 = lm(bonus ~ log(age), df)
summary(model3)
model3 = lm(bonus ~ age, df)
summary(model3)
model3 = lm(bonus ~ age, df)
summary(model3)
ggplot(df, aes(age, bonus))+
geom_point()
model3 = lm(bonus ~ age, df)
summary(model3)
ggplot(df, aes(age, bonus))+
geom_point()+
geom_smooth()
model3 = lm(bonus ~ age, df)
summary(model3)
# has linear effect
model3 = lm(bonus ~ age + log(age), df)
summary(model3)
# has linear effect
model3 = lm(bonus ~ age , df)
summary(model3)
# has linear effect
model3 = lm(bonus ~ age + log(age), df)
summary(model3)
# has linear effect
model3 = lm(bonus ~ age + poly(age), df)
summary(model3)
# has linear effect
model3 = lm(bonus ~ age + poly(age,10), df)
summary(model3)
# has linear effect
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.height = 5, fig.width = 10)
library(tidyverse)
library(sf)
library(broom)       # Extract/display model results
library(jtools)      # Display/visualize model results
library(performance) # Check model performance and assumptions
load("data/prepared_data.Rdat")
# Two base models
model1 <- lm(price ~ size + accommodates + n_restaurants, data = df)
model2 <- lm(price ~ size + accommodates + n_restaurants + tv, data = df)
# Different ways of checking for non-linearities
model3 <- lm(price ~ log(size), df)
model4 <- lm(price ~ size + I(size^2), df)
model5 <- lm(price ~ I(cut_number(size, 5)), df)
model6 <- lm(price ~ I(cut_width(size, 20)), df)
# Check how the data of your model looks like
model.matrix(model4) %>% head(10)
summary(model1)
confint(model1)
# Extracting results as a data frame
broom::tidy(model1)
# Summaries With more advanced options
jtools::summ(model1, confint = TRUE, ci.width = 0.99, robust = TRUE, vifs = TRUE)
insatll.packages("sandwich")
install.packages("sandwich")
summary(model1)
confint(model1)
# Extracting results as a data frame
broom::tidy(model1)
# Summaries With more advanced options
jtools::summ(model1, confint = TRUE, ci.width = 0.99, robust = TRUE, vifs = TRUE)
jtools::summ(model1, scale = TRUE, confint = TRUE, ci.width = 0.99)
# Compare model coefficients and confidence intervals visually
jtools::plot_summs(model1, model2, ci_level = 0.99, model.names = c("base","with tv"))
install.packages("ggstance")
# Compare model coefficients and confidence intervals visually
jtools::plot_summs(model1, model2, ci_level = 0.99, model.names = c("base","with tv"))
# .. for interpretation it can be useful to scale the X variables:
# --> effect of a 1 standard deviation increase in X variable on Y variable
jtools::plot_summs(model1, ci_level = 0.99, scale = TRUE)
performance::performance(model1)
performance::compare_performance(model1, model2)
# We can extract single elements from the lm object
model1$coefficients
model1$residuals %>% head()
model1$fitted.values %>% head()
# Often this is more convenient using the broom package
## Fitted values, residuals, and more for
broom::augment(model1)
# ... useful for writing the predictions back to the original data, or new data
broom::augment_columns(model1, data = df)
# Effect of ommiting observation i on the parameter estimates
dfbetas(model1) %>% head()
as.data.frame(dfbetas(model1)) %>% ggplot(aes(size, accommodates)) + geom_point()
# Average effect of ommitting observation i on all predicted values
# The critical value is usually 4 / number of observations
plot(cooks.distance(model1))
# Use linear absolute deviations to mitigate influence of outliers
L1pack::lad(price ~ size, df)
lm(price ~ size, df)
performance::check_model(model1)
install.packages("see")
performance::check_model(model1)
par(mfrow = c(2, 2))
plot(model1)
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(sf)
library(shinythemes)
library(readr)
library(tmap)
library(countrycode)
library(RColorBrewer)
library(ggrepel)
library(ggthemes)
library(devtools)
#devtools::install_github('rensa/ggflags')
library(ggflags)
library(shinyWidgets)
### functions
normalize <- function(x) {
return ((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x,na.rm = TRUE)))
}
get_most_recent_value <- function(df) {
df <- df %>%
pivot_longer(cols = colnames(df[6:65]), names_to = "year") %>%
mutate_at('year', as.numeric) %>% group_by(`Country Code`) %>%
arrange(-year, .by_group=TRUE) %>%
filter(!is.na(value)) %>%
select(`Country Name`, `Country Code`, year, value)
df <- distinct(df,'Country Code', .keep_all=TRUE)
df <- df[-c(5:5)]
return(df)
}
###
df_covid=read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
df_covid <- df_covid %>%mutate(mortality_rate = Cumulative_deaths/Cumulative_cases)
df_health = read_csv('data/health_expenditures.csv', skip = 3)
df_child_mortality = read_csv('data/child_mortality_rate.csv', skip = 3)
df_life_expectancy = read_csv('data/life_expectancy.csv', skip = 3)
df_physicans = read_csv('data/physicians.csv', skip=3)
df_child_mortality <- get_most_recent_value(df_child_mortality) %>%
rename(child_mortality_per_1k = value)
df_physicans <- get_most_recent_value(df_physicans) %>%
rename(physicans_per_1k = value)
df_life_expectancy <- get_most_recent_value(df_life_expectancy) %>%
rename(life_expectancy = value)
df_health <- get_most_recent_value(df_health) %>%
rename(health_expenditures_usd = value)
df_joined <- df_child_mortality %>%
full_join(df_physicans,by=c('Country Name','Country Code')) %>%
full_join(df_life_expectancy,by=c('Country Name','Country Code')) %>%
full_join(df_health,by=c('Country Name', 'Country Code'))
df_joined <- df_joined %>%
mutate(iso2 = countrycode(`Country Name`, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(iso2 ,child_mortality_per_1k, physicans_per_1k, life_expectancy, health_expenditures_usd)
df_covid <- df_covid %>%
mutate(iso2 = countrycode(Country, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(Country, iso2, mortality_rate,Cumulative_cases, Date_reported)
df <- df_covid %>%
left_join(df_joined, by= "iso2")
data("World", package = "tmap")
world <- World
world <- world %>%
mutate(iso2 = countrycode(iso_a3, origin = "iso3c", destination = "iso2c"))
world <- world %>%
left_join(df, by= "iso2")
setwd("DataViz/Covid-Shiny")
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(sf)
library(shinythemes)
library(readr)
library(tmap)
library(countrycode)
library(RColorBrewer)
library(ggrepel)
library(ggthemes)
library(devtools)
#devtools::install_github('rensa/ggflags')
library(ggflags)
library(shinyWidgets)
### functions
normalize <- function(x) {
return ((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x,na.rm = TRUE)))
}
get_most_recent_value <- function(df) {
df <- df %>%
pivot_longer(cols = colnames(df[6:65]), names_to = "year") %>%
mutate_at('year', as.numeric) %>% group_by(`Country Code`) %>%
arrange(-year, .by_group=TRUE) %>%
filter(!is.na(value)) %>%
select(`Country Name`, `Country Code`, year, value)
df <- distinct(df,'Country Code', .keep_all=TRUE)
df <- df[-c(5:5)]
return(df)
}
###
df_covid=read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
df_covid <- df_covid %>%mutate(mortality_rate = Cumulative_deaths/Cumulative_cases)
df_health = read_csv('data/health_expenditures.csv', skip = 3)
df_child_mortality = read_csv('data/child_mortality_rate.csv', skip = 3)
df_life_expectancy = read_csv('data/life_expectancy.csv', skip = 3)
df_physicans = read_csv('data/physicians.csv', skip=3)
df_child_mortality <- get_most_recent_value(df_child_mortality) %>%
rename(child_mortality_per_1k = value)
df_physicans <- get_most_recent_value(df_physicans) %>%
rename(physicans_per_1k = value)
df_life_expectancy <- get_most_recent_value(df_life_expectancy) %>%
rename(life_expectancy = value)
df_health <- get_most_recent_value(df_health) %>%
rename(health_expenditures_usd = value)
df_joined <- df_child_mortality %>%
full_join(df_physicans,by=c('Country Name','Country Code')) %>%
full_join(df_life_expectancy,by=c('Country Name','Country Code')) %>%
full_join(df_health,by=c('Country Name', 'Country Code'))
df_joined <- df_joined %>%
mutate(iso2 = countrycode(`Country Name`, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(iso2 ,child_mortality_per_1k, physicans_per_1k, life_expectancy, health_expenditures_usd)
df_covid <- df_covid %>%
mutate(iso2 = countrycode(Country, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(Country, iso2, mortality_rate,Cumulative_cases, Date_reported)
df <- df_covid %>%
left_join(df_joined, by= "iso2")
data("World", package = "tmap")
world <- World
world <- world %>%
mutate(iso2 = countrycode(iso_a3, origin = "iso3c", destination = "iso2c"))
world <- world %>%
left_join(df, by= "iso2")
setwd("DataViz")
setwd("covid_survey3")
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(sf)
library(shinythemes)
library(readr)
library(tmap)
library(countrycode)
library(RColorBrewer)
library(ggrepel)
library(ggthemes)
library(devtools)
#devtools::install_github('rensa/ggflags')
library(ggflags)
library(shinyWidgets)
### functions
normalize <- function(x) {
return ((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x,na.rm = TRUE)))
}
get_most_recent_value <- function(df) {
df <- df %>%
pivot_longer(cols = colnames(df[6:65]), names_to = "year") %>%
mutate_at('year', as.numeric) %>% group_by(`Country Code`) %>%
arrange(-year, .by_group=TRUE) %>%
filter(!is.na(value)) %>%
select(`Country Name`, `Country Code`, year, value)
df <- distinct(df,'Country Code', .keep_all=TRUE)
df <- df[-c(5:5)]
return(df)
}
###
df_covid=read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
df_covid <- df_covid %>%mutate(mortality_rate = Cumulative_deaths/Cumulative_cases)
df_health = read_csv('data/health_expenditures.csv', skip = 3)
df_child_mortality = read_csv('data/child_mortality_rate.csv', skip = 3)
df_life_expectancy = read_csv('data/life_expectancy.csv', skip = 3)
df_physicans = read_csv('data/physicians.csv', skip=3)
df_child_mortality <- get_most_recent_value(df_child_mortality) %>%
rename(child_mortality_per_1k = value)
df_physicans <- get_most_recent_value(df_physicans) %>%
rename(physicans_per_1k = value)
df_life_expectancy <- get_most_recent_value(df_life_expectancy) %>%
rename(life_expectancy = value)
df_health <- get_most_recent_value(df_health) %>%
rename(health_expenditures_usd = value)
df_joined <- df_child_mortality %>%
full_join(df_physicans,by=c('Country Name','Country Code')) %>%
full_join(df_life_expectancy,by=c('Country Name','Country Code')) %>%
full_join(df_health,by=c('Country Name', 'Country Code'))
df_joined <- df_joined %>%
mutate(iso2 = countrycode(`Country Name`, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(iso2 ,child_mortality_per_1k, physicans_per_1k, life_expectancy, health_expenditures_usd)
df_covid <- df_covid %>%
mutate(iso2 = countrycode(Country, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(Country, iso2, mortality_rate,Cumulative_cases, Date_reported)
df <- df_covid %>%
left_join(df_joined, by= "iso2")
data("World", package = "tmap")
world <- World
world <- world %>%
mutate(iso2 = countrycode(iso_a3, origin = "iso3c", destination = "iso2c"))
world <- world %>%
left_join(df, by= "iso2")
df_normalize <- df %>% filter(Date_reported == as.Date("2020-12-31") &Cumulative_cases >= 10000)
df_normalize$child_mortality_norm <- 1-normalize(df_normalize$child_mortality_per_1k)
df_normalize$physicans_norm <- normalize(df_normalize$physicans_per_1k)
df_normalize$life_expectancy_norm <- normalize(df_normalize$life_expectancy)
df_normalize$health_expenditures_norm <- normalize(df_normalize$health_expenditures_usd)
df_normalize$iso2_Lower <- tolower(df_normalize$iso2)
View(df_normalize)
df_normalize %>% rowwise() %>% mutate(score_health = sum(c("child_mortality_norm", "physicans_norm")))
knitr::opts_chunk$set(echo = TRUE)
df_normalize %>% rowwise() %>% mutate(score_health = sum(child_mortality_norm, physicans_norm))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c("child_mortality_norm", "physicans_norm"))
df_normalize %>% rowwise() %>% mutate(score_health = sum("child_mortality_norm", "physicans_norm"))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c("child_mortality_norm", "physicans_norm")))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c("child_mortality_norm", "physicans_norm")))
df_normalize %>% rowwise() %>% mutate(score_health = sum(child_mortality_norm, physicans_norm))
df_normalize %>% rowwise() %>% mutate(score_health = sum(list(child_mortality_norm, physicans_norm)))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c(child_mortality_norm, physicans_norm)))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c(rlang::sym("child_mortality_norm"), physicans_norm)))
df_normalize %>% rowwise() %>% mutate(score_health = sum(rlang::sym("child_mortality_norm"), physicans_norm)))
df_normalize %>% rowwise() %>% mutate(score_health = sum(rlang::sym("child_mortality_norm"), physicans_norm))
df_normalize %>% rowwise() %>% mutate(score_health = sum(as.symbol("child_mortality_norm"), physicans_norm))
df_normalize %>% rowwise() %>% mutate(score_health = sum(child_mortality_norm, physicans_norm))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c(child_mortality_norm, physicans_norm))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c(child_mortality_norm, physicans_norm)))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c("child_mortality_norm", "physicans_norm")))
df_normalize %>% rowwise() %>% mutate(score_health = sum(c("child_mortality_norm", "physicans_norm")))
df_normalize %>% select("iso2")
df_normalize %>% select(c("iso2", "mortality_rate"))
View(df_normalize)
df_normalize %>% select(c("physicans_norm", "child_mortality_rate_norm"))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm"))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(health_score = sum())
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(health_score, sum)
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(health_score= sum)
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(health_score= rowsum())
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% summarise_all(sum)
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% summarise_all(funs(sum)
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% summarise_all(sum)
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% summarise_all(funs(sum))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(score_health = summarise_all(sum))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(score_health = sum(1,2))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(score_health = sum(c(.[1:2])))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(score_health = sum(df_normalize[,[1:2]]))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(score_health = sum(df_normalize[,1:2]))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% rowwise() %>% mutate(score_health = sum([,1:2]))
df_normalize %>% select(c("physicans_norm", "child_mortality_norm")) %>% summarise_all(funs(sum))
df_normalize %>% mutate(score = select(c("child_mortality_norm", "physicans_norm")) %>% rowSums())
df_normalize %>% mutate(score = select("child_mortality_norm","physicans_norm")) %>% rowSums())
df_normalize %>% mutate(score = select("child_mortality_norm","physicans_norm") %>% rowSums())
df_normalize %>% mutate(score = select(child_mortality_norm,physicans_norm) %>% rowSums())
df_normalize %>% mutate(score = select(c(child_mortality_norm,physicans_norm)) %>% rowSums())
df_normalize %>% mutate(score = select(.,c(child_mortality_norm,physicans_norm)) %>% rowSums())
df_normalize %>% mutate(score = select(.,c("child_mortality_norm","physicans_norm")) %>% rowSums())
df_normalize %>% mutate(score = select(.,list("child_mortality_norm","physicans_norm")) %>% rowSums())
df_normalize %>% mutate(score = select(.,c("child_mortality_norm","physicans_norm")) %>% rowSums())
class(c(1,2,3))
class(c('hi', 'moin'))
hallo <- c('hi', 'moin')
hallo <- c('hi', 'moin')
hallo
runApp()
View(df_covid)
View(df_covid)
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(countrycode)
df_normalize
list(df_normalize$iso2_Lower)
runApp()
runApp()
list(df$iso2)
df %>% distinct_at(iso2)
df %>% distinct_at("iso2")
df %>% distinct_at("Country")
list(df %>% distinct_at("Country"))
unique(df$Country)
View(df_child_mortality)
runApp()
runApp()
