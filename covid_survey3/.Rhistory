exp(0.06)
exp(1.06)
exp(9.341-0.06)
exp(9.341)- exp(9.341-0.06)
exp(9.341)- exp(9.341+0.06)
exp(9.341+0.06) -exp(9.341)
model2 <- lm(price ~ age + age^2 + kilometer + horsePower + gearbox + brand, df)
summary(model2)
model2 <- lm(price ~ age + (age^2) + kilometer + horsePower + gearbox + brand, df)
summary(model2)
model2 <- lm(price ~ age + I(age^2) + kilometer + horsePower + gearbox + brand, df)
summary(model2)
1.818e+04
1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)
1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(1))
1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_1 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_1 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_1
price_10
price_1 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_20 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(20))+(2.702e+01*(20^2))
price_1
price_10
price_1 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_20 <- 1.818e+04+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(20))+(2.702e+01*(20^2))
price_1
price_10
price_20
price_1 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- (1.818e+04)+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_20 <- (1.818e+04)+(50000*(-2.731e-02))+(-2.058e+02)+(-1.338e+03*(20))+(2.702e+01*(20^2))
price_1
price_10
price_20
price_1 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01)+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_20 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01)+(-2.058e+02)+(-1.338e+03*(20))+(2.702e+01*(20^2))
price_1 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_20 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(20))+(2.702e+01*(20^2))
price_1
price_10
price_20
price_1 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(1))+(2.702e+01*(1^2))
price_10 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(10))+(2.702e+01*(10^2))
price_20 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(20))+(2.702e+01*(20^2))
price_30 <- (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(30))+(2.702e+01*(30^2))
price_40 <-  (1.818e+04)+(50000*(-2.731e-02))+(120*(3.480e+01))+(-2.058e+02)+(-1.338e+03*(40))+(2.702e+01*(40^2))
price_1
price_10
price_20
price_30
price_40
broom::augment_columns(model2, df)
broom::augment_columns(model2, df) %>%
filter(fuelType=="benzin", gearbox == "automatik", kilometer<=100000) %>%
arrange(.resid)
broom::augment_columns(model2, df) %>%
filter(fuelType=="benzin", gearbox == "automatik", kilometer<=100000) %>%
arrange(.resid) %>%
head()
broom::augment_columns(model2, df) %>%
filter(fuelType=="benzin", gearbox == "automatik", kilometer<100000) %>%
arrange(.resid) %>%
head()
model_postal <- lm(price ~ age+ I(age^2)+ horsePower+ gearbox+fuelType+ kilometer+ postalCodeRegion, df)
View(df)
model_postal <- lm(price ~ age+ I(age^2)+ horsePower+ gearbox+fuelType+ kilometer+ postalCodeRegion, df)
summary(model_postal)
model_postal <- lm(price ~ age+ I(age^2)+ horsePower+ gearbox+ kilometer+ postalCodeRegion, df)
summary(model_postal)
model_postal <- lm(price ~ age+ I(age^2)+ horsePower+ gearbox+ kilometer+ as.character(postalCodeRegion), df)
summary(model_postal)
shiny::runApp('DataViz/Covid-Shiny/covid_survey3')
knitr::opts_chunk$set(echo = TRUE)
glue("test", "1")
library(glue)
glue("test", "1")
runApp('DataViz/Covid-Shiny/covid_survey3')
library(glue)
glue("test", 18441)
library(glue)
glue("test", 2020-01-14)
library(glue)
glue("test", 2021-01-14)
library(glue)
glue("test", "2021-01-14")
library(glue)
glue("test", as.Date("2021-01-14"))
library(glue)
glue("test", as.character(as.Date("2021-01-14")))
runApp('DataViz/Covid-Shiny/covid_survey3')
library(tmap)
data("Europe", package = "tmap")
Europe
library(tmap)
data("Europe", package = "tmap")
Europe
library(tmap)
data("World", package = "tmap")
World
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
library(tmap)
data("World", package = "tmap")
world <- World
world
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
distinct(world, continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
distinct(world, continent) %>% select(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
distinct(world, continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
world %>% distict(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
world %>% distinct(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
st_drop_geometry(world)
world %>% distinct(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
world <- st_drop_geometry(world)
world %>% distinct(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
st_drop_geometry(world) %>% distinct(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
list(st_drop_geometry(world) %>% distinct(continent))
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
st_drop_geometry(world) %>% distinct(continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
as.list(st_drop_geometry(world) %>% distinct(continent))
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
list = as.list(st_drop_geometry(world) %>% distinct(continent))
list
list[1]
list[2]
list[3]
list[1]
list[5]
list[1]
list[[1]]
list[[2]]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
list <-  as.list(st_drop_geometry(world) %>% distinct(continent))
list
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent)
unique(world$continent)[1]
unique(world$continent)[2]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent)+"World"
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent).append("World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
c(unique(world$continent), "World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
list(unique(world$continent), "World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
list <- unique(world$continent)
list.append("World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
append(unique(world$continent), "World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
paste(unique(world$continent), "World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
combine.lists(unique(world$continent), list("World"))
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
combine(unique(world$continent), list("World"))
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent)+"World"
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
c(unique(world$continent), list("World"))
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
c(unique(world$continent), "World")
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
unique(world$continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
levels(world$continent)
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
c(levels(world$continent), "World")
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[cont_choices != "Antarctica"]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[cont_choices != "Antarctica"]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[cont_choices != "Antarctica"|cont_choices != "Seven seas (open ocean)"]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[(cont_choices != "Antarctica")|(cont_choices != "Seven seas (open ocean)")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[(cont_choices != "Antarctica")||(cont_choices != "Seven seas (open ocean)")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[(cont_choices != "Antarctica"),(cont_choices != "Seven seas (open ocean)")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[!(cont_choices %in% c("Antarctica")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[!(cont_choices %in% c("Antarctica"),]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[(cont_choices %in% c("Antarctica")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[cont_choices %in% c("Antarctica")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[!cont_choices %in% c("Antarctica")]
library(tidyverse)
library(tmap)
data("World", package = "tmap")
world <- World
cont_choices <- c(levels(world$continent), "World")
cont_choices[!cont_choices %in% c("Antarctica", "Seven seas (open ocean)")]
runApp('DataViz/Covid-Shiny/covid_survey3')
runApp('DataViz/Covid-Shiny/covid_survey3')
View(world)
runApp('DataViz/Covid-Shiny/covid_survey3')
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(sf)
library(shinythemes)
library(readr)
library(tmap)
library(countrycode)
library(RColorBrewer)
library(ggrepel)
library(ggthemes)
library(devtools)
#devtools::install_github('rensa/ggflags')
library(ggflags)
library(shinyWidgets)
library(glue)
library(plotly)
### functions
normalize <- function(x) {
return ((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x,na.rm = TRUE)))
}
get_most_recent_value <- function(df) {
df <- df %>%
pivot_longer(cols = colnames(df[6:65]), names_to = "year") %>%
mutate_at('year', as.numeric) %>% group_by(`Country Code`) %>%
arrange(-year, .by_group=TRUE) %>%
filter(!is.na(value)) %>%
select(`Country Name`, `Country Code`, year, value)
df <- distinct(df,'Country Code', .keep_all=TRUE)
df <- df[-c(5:5)]
return(df)
}
###
df_covid=read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
df_covid <- df_covid %>%mutate(mortality_rate = Cumulative_deaths/Cumulative_cases)
df_health = read_csv('data/health_expenditures.csv', skip = 3)
df_child_mortality = read_csv('data/child_mortality_rate.csv', skip = 3)
df_life_expectancy = read_csv('data/life_expectancy.csv', skip = 3)
df_physicans = read_csv('data/physicians.csv', skip=3)
df_child_mortality <- get_most_recent_value(df_child_mortality) %>%
rename(child_mortality_per_1k = value)
df_physicans <- get_most_recent_value(df_physicans) %>%
rename(physicans_per_1k = value)
df_life_expectancy <- get_most_recent_value(df_life_expectancy) %>%
rename(life_expectancy = value)
df_health <- get_most_recent_value(df_health) %>%
rename(health_expenditures_usd = value)
df_joined <- df_child_mortality %>%
full_join(df_physicans,by=c('Country Name','Country Code')) %>%
full_join(df_life_expectancy,by=c('Country Name','Country Code')) %>%
full_join(df_health,by=c('Country Name', 'Country Code'))
df_joined <- df_joined %>%
mutate(iso2 = countrycode(`Country Name`, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(iso2 ,child_mortality_per_1k, physicans_per_1k, life_expectancy, health_expenditures_usd)
df_covid <- df_covid %>%
mutate(iso2 = countrycode(Country, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(Country, iso2, mortality_rate,Cumulative_cases, Date_reported)
df <- df_covid %>%
left_join(df_joined, by= "iso2")
data("World", package = "tmap")
world <- World
world <- world %>%
mutate(iso2 = countrycode(iso_a3, origin = "iso3c", destination = "iso2c"))
cont_choices <- c(levels(world$continent), "World")
cont_choices <- cont_choices[!cont_choices %in% c("Antarctica", "Seven seas (open ocean)")]
setwd("DataViz/Covid-Shiny/covid_survey3")
library(shiny)
library(shinydashboard)
library(tidyverse)
library(plotly)
library(DT)
library(sf)
library(shinythemes)
library(readr)
library(tmap)
library(countrycode)
library(RColorBrewer)
library(ggrepel)
library(ggthemes)
library(devtools)
#devtools::install_github('rensa/ggflags')
library(ggflags)
library(shinyWidgets)
library(glue)
library(plotly)
### functions
normalize <- function(x) {
return ((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x,na.rm = TRUE)))
}
get_most_recent_value <- function(df) {
df <- df %>%
pivot_longer(cols = colnames(df[6:65]), names_to = "year") %>%
mutate_at('year', as.numeric) %>% group_by(`Country Code`) %>%
arrange(-year, .by_group=TRUE) %>%
filter(!is.na(value)) %>%
select(`Country Name`, `Country Code`, year, value)
df <- distinct(df,'Country Code', .keep_all=TRUE)
df <- df[-c(5:5)]
return(df)
}
###
df_covid=read_csv("https://covid19.who.int/WHO-COVID-19-global-data.csv")
df_covid <- df_covid %>%mutate(mortality_rate = Cumulative_deaths/Cumulative_cases)
df_health = read_csv('data/health_expenditures.csv', skip = 3)
df_child_mortality = read_csv('data/child_mortality_rate.csv', skip = 3)
df_life_expectancy = read_csv('data/life_expectancy.csv', skip = 3)
df_physicans = read_csv('data/physicians.csv', skip=3)
df_child_mortality <- get_most_recent_value(df_child_mortality) %>%
rename(child_mortality_per_1k = value)
df_physicans <- get_most_recent_value(df_physicans) %>%
rename(physicans_per_1k = value)
df_life_expectancy <- get_most_recent_value(df_life_expectancy) %>%
rename(life_expectancy = value)
df_health <- get_most_recent_value(df_health) %>%
rename(health_expenditures_usd = value)
df_joined <- df_child_mortality %>%
full_join(df_physicans,by=c('Country Name','Country Code')) %>%
full_join(df_life_expectancy,by=c('Country Name','Country Code')) %>%
full_join(df_health,by=c('Country Name', 'Country Code'))
df_joined <- df_joined %>%
mutate(iso2 = countrycode(`Country Name`, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(iso2 ,child_mortality_per_1k, physicans_per_1k, life_expectancy, health_expenditures_usd)
df_covid <- df_covid %>%
mutate(iso2 = countrycode(Country, origin="country.name", destination = "iso2c")) %>%
filter(!is.na(iso2)) %>%
select(Country, iso2, mortality_rate,Cumulative_cases, Date_reported)
df <- df_covid %>%
left_join(df_joined, by= "iso2")
data("World", package = "tmap")
world <- World
world <- world %>%
mutate(iso2 = countrycode(iso_a3, origin = "iso3c", destination = "iso2c"))
cont_choices <- c(levels(world$continent), "World")
cont_choices <- cont_choices[!cont_choices %in% c("Antarctica", "Seven seas (open ocean)")]
df_world  <- df %>% filter(Date_reported == "2021-28-01" & Cumulative_cases >=1000)
df_world  <- df %>% filter(Date_reported == "2021-01-28" & Cumulative_cases >=1000)
df_world <- world %>%
left_join(df_world, by= "iso2")
df_world
runApp()
View(df_world)
round(0.0024, 4)
round(0.00245434, 4)
runApp()
